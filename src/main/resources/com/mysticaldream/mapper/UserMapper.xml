<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mysticaldream.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="login_ip" jdbcType="VARCHAR" property="loginIp"/>
        <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted"/>
    </resultMap>

    <sql id="UserBaseWithoutPrimaryKey">
        username,
        `password`,
        avatar,
        `role`,
        create_time,
        update_time,
        login_ip,
        is_deleted
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from `user`
        where id = #{userId,jdbcType=BIGINT}
          and is_deleted = 0
    </select>


    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="User"
            useGeneratedKeys="true">
        insert into `user` (<include refid="UserBaseWithoutPrimaryKey"/>)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR},
            #{role,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
            #{loginIp,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BOOLEAN})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="User"
            useGeneratedKeys="true">
        insert into `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="role != null">
                `role`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="loginIp != null">
                login_ip,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginIp != null">
                #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="User">
        update `user`
        <set>
            <if test="username != null and username != ''">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="avatar != null">
                avatar = #{avatar,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                `role` = #{role,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginIp != null">
                login_ip = #{loginIp,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="User">
        update `user`
        set username    = #{username,jdbcType=VARCHAR},
            `password`  = #{password,jdbcType=VARCHAR},
            avatar      = #{avatar,jdbcType=VARCHAR},
            `role`      = #{role,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            login_ip    = #{loginIp,jdbcType=VARCHAR},
            is_deleted  = #{isDeleted,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectUserByUsername" resultMap="BaseResultMap">
        select *
        from user
        where username = #{username,jdbcType=VARCHAR}
          and is_deleted = 0
    </select>

    <select id="checkUsernameUnique" resultType="int">
        select count(1)
        from user
        where username = #{username,jdbcType=VARCHAR}
        limit 1
    </select>

    <update id="updateUserAvatar" parameterType="User">
        update user
        set avatar=#{avatar,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="deleteByPrimaryKey" parameterType="_long">
        update user
        set is_deleted=1
        where id = #{userId,jdbcType=BIGINT}
          and is_deleted = 0
    </update>

</mapper>